#== Include ASAN ==#
function(compile_with_asan ENABLE_ASAN)
    if(ENABLE_ASAN)
        add_compile_options(-fsanitize=address)
        add_link_options(-fsanitize=address)
        message(STATUS "AddressSanitizer aktiviert.")
    else()
        message(STATUS "AddressSanitizer deaktiviert.")
    endif()
endfunction()

#== Check if EXECUTABLES contains NAME SOURCES pairs ==#
# Pattern: (NAME <name> SOURCES (<source1>)+)+
function(validate_executables)
    set(index 0)
    list(LENGTH EXECUTABLES exec_length)

    while(index LESS exec_length)
        list(GET EXECUTABLES ${index} item)
        if(NOT item STREQUAL "NAME")
            message(FATAL_ERROR "Erwartet 'NAME' an Position ${index}, gefunden '${item}'.")
        endif()
        math(EXPR index "${index} + 1")

        list(GET EXECUTABLES ${index} exe_name)
        if(NOT exe_name OR exe_name STREQUAL "NAME" OR exe_name STREQUAL "SOURCES")
            message(FATAL_ERROR "Fehlender Executable-Name nach 'NAME' an Position ${index}.")
        endif()
        math(EXPR index "${index} + 1")

        list(GET EXECUTABLES ${index} item)
        if(NOT item STREQUAL "SOURCES")
            message(FATAL_ERROR "Erwartet 'SOURCES' nach Executable '${exe_name}' an Position ${index}, gefunden '${item}'.")
        endif()
        math(EXPR index "${index} + 1")

        # Überprüfen und sicherstellen, dass mindestens eine Quelle vorhanden ist
        if(index GREATER_EQUAL exec_length)
            message(FATAL_ERROR "Keine Quellen für Executable '${exe_name}' angegeben.")
        endif()

        list(GET EXECUTABLES ${index} source)
        if(source STREQUAL "NAME" OR source STREQUAL "SOURCES" OR NOT source)
            message(FATAL_ERROR "Keine gültigen Quellen für Executable '${exe_name}' an Position ${index}.")
        endif()

        # Überspringen der Quellen
        while(index LESS exec_length)
            list(GET EXECUTABLES ${index} source)
            if(source STREQUAL "NAME")
                break()
            endif()
            if(source STREQUAL "SOURCES")
                message(FATAL_ERROR "Nicht gültiger Source-Name 'SOURCE' an Position ${index}.")
            endif()
            math(EXPR index "${index} + 1")
            if(NOT source)
                message(FATAL_ERROR "Unerwartetes Ende der EXECUTABLES Liste nach 'SOURCES' für '${exe_name}'.")
            endif()
        endwhile()
    endwhile()
endfunction()


#== Add Executables and Link Libraries ==#
function(call_per_executable NAME)
    add_executable(${NAME} ${ARGN})
    target_link_libraries(${NAME} ${LIBRARIES})
    target_compile_options(${NAME} PRIVATE ${CUSTOM_COMPILE_FLAGS})
endfunction()

function(create_executables)
    set(index 0)
    list(LENGTH EXECUTABLES length)

    while(index LESS length)
        list(GET EXECUTABLES ${index} item)
        if(item STREQUAL "NAME")
            math(EXPR index "${index} + 1")
            list(GET EXECUTABLES ${index} EXEC_NAME)
            math(EXPR index "${index} + 1")
        endif()

        if(item STREQUAL "SOURCES")
            set(SOURCES "")
            math(EXPR index "${index} + 1")
            while(index LESS length)
                list(GET EXECUTABLES ${index} item)
                if(item STREQUAL "NAME")
                    break()
                endif()
                list(APPEND SOURCES ${item})
                math(EXPR index "${index} + 1")
            endwhile()
            message(STATUS "Erstelle Executable: ${EXEC_NAME} mit Quellen: ${SOURCES}")
            call_per_executable(${EXEC_NAME} ${SOURCES})
        endif()
    endwhile()
endfunction()
